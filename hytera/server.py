#!/usr/bin/env python3
#-*- coding: utf-8 -*-
import socket

# class Protocol:
#     online =

protocol = {
    'online': b'P2P8\x01\x00\x00\x00\x14\x00\x00\x00\x00\xff\x01\x80\xe3\x07\x00\x00\x10\x00\x00\x00',
'heartbeat': b'P2P8\x01\x00\x00\x00\x14\x00\x00\x007\xff\x01\x00\xe3\x07\x00\x00\x10\x00\x00\x00',
    'error': b'P2P8\x01\x00\x00\x00\x14\x00\x00\x00!\xff\x01\x00\xe3\x07\x00\x00\x10\x00\x00\x00',
# b'P2P8\x01\x00\x00\x00\x14\x00\x00\x00\x03\xff\x01\x00\xe3\x07\x00\x00\x10\x00\x00\x00'
# b'P2P8\x01\x00\x00\x00\x14\x00\x00\x00\x03\xff\x01\x00\xe3\x07\x00\x00\x10\x00\x00\x00'
    'ttl': b'P2P8\x01\x00\x00\x00\x14\x00\x00\x00\x03\xff\x01\x00\xe3\x07\x00\x00\x10\x00\x00\x00',
        # b'\xbe\xbe\xbe\xbe\n\x00\x00\x00\x14\x00\x00\x00\xbe\xbe\xbd\xbe\xe3\x07\x00\x00',
    # 'reconnect': b'P2P8/\x00\x00\x00\x00\x00\x00\x00\xed\x06\x01\x00\x00\x00\x00\x00\x00',
    'reconnect': b'P2P8\x01\x00\x00\x00\x14\x00\x00\x00\xf7\xff\x01\x00\xe3\x07\x00\x00\x10\x00\x00\x00',
    '':b'P2P8\x01\x00\x00\x00\x14\x00\x00\x00\x03\xff\x01\x00\xe3\x07\x00\x00\x10\x00\x00\x00',
    'end':b'\x02\x00\x00\x00\n\x00\x00\x00\x14\x00\x00\x00\xc0\xa8U\xfe\xe3\x07\x00\x00',
}

server = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
server.bind(("0.0.0.0", 50000))
print("UDP bound on port 50000...")
online = []
while True:
    data, addr = server.recvfrom(1024)

    if addr not in online:
        online.append(addr)
        print("Online", online)

    if data.find(b'P2P8') == 0:


        if data == protocol.get('online') :
            # or data.find(b'P2P8\x01\x00\x00\x00\x14\x00\x00\x00') == 0:
            # or data == protocol.get('reconnect') :
            # or data == protocol.get('heartbeat'):

            server.sendto(b'P2P8\x02\x00\x00\x00\x14\x00\x00\x00\x00\x03\xb5\xc3\xe3\x07\x00\x00\x10\x00\x00\x00\x03', addr)
            server.sendto(b'P2P8\x06\x00\x00\x00\x14\x00\x00\x00o\xff\xb9\xc3\xe3\x07\x00\x00\x02\x00\x10\x00\x00\x00\x01\x01\x01\xd4\xc0\xa8W\xfe\x02\x016C\xc0\xa8W\xfe', addr)
            server.sendto(b'\x02\x00\x00\x00\n\x00\x00\x00\x14\x00\x00\x00\xc0\xa8U\xfe\xe3\x07\x00\x00', addr)

            # numbers = len(online)
            #
            # line1 = b'P2P8\x02\x00\x00\x00\x14\x00\x00\x00\x00' + numbers.to_bytes() + b'\xb5\xc3\xe3\x07\x00\x00\x10\x00\x00\x00' + numbers.to_bytes()
            # server.sendto(line1,addr)
            # # print(line1)
            #
            # terminal = []
            # for n in range(1, numbers + 1):
            #     terminal.append(n.to_bytes() + b'\x01'+n.to_bytes()+b'\xc0\xa8W\xfe')
            #     print(n)
            #
            # line2 = b'P2P8\x06\x00\x00\x00\x14\x00\x00\x00\xf5\xff\xb9\xc3\xe3\x07\x00\x00\x02\x00\x10\x00\x00\x00' + b''.join(
            #     terminal)
            # # print(line2)
            # server.sendto(line2, addr)
            # server.sendto(b'\x02\x00\x00\x00\n\x00\x00\x00\x14\x00\x00\x00\xc0\xa8U\xfe\xe3\x07\x00\x00', addr)
            if addr not in online:
                online.append(addr)
            print("Online",online)
        if data == protocol.get('heartbeat'):
            server.sendto(b'P2P8\x06\x00\x00\x00\x14\x00\x00\x00\xd3\x02\xb9\xc3\xe3\x07\x00\x00\x01\x00\x10\x00\x00\x00\x01\x01\x01\xd4\xc0\xa8W\xfe', addr)
            server.sendto(b'\x02\x00\x00\x00\n\x00\x00\x00\x14\x00\x00\x00\xc0\xa8U\xfe\xe3\x07\x00\x00', addr)

            if addr not in online:
                online.append(addr)
                print("Online",online)
            pass
        if data == protocol.get('ttl'):
            print("TTL [%s:%s] TTL" % addr)
            # server.sendto(
            #     b'P2P8\x06\x00\x00\x00\x14\x00\x00\x00o\xff\xb9\xc3\xe3\x07\x00\x00\x02\x00\x10\x00\x00\x00\x01\x01\x01\xd4\xc0\xa8W\xfe\x02\x016C\xc0\xa8W\xfe',
            #     addr)
            # server.sendto(b'\x02\x00\x00\x00\n\x00\x00\x00\x14\x00\x00\x00\xc0\xa8U\xfe\xe3\x07\x00\x00', addr)
        #     server.sendto(
        #         b'P2P8\x06\x00\x00\x00\x14\x00\x00\x00o\xff\xb9\xc3\xe3\x07\x00\x00\x02\x00\x10\x00\x00\x00\x01\x01\x01\xd4\xc0\xa8W\xfe\x02\x016C\xc0\xa8W\xfe',
        #         addr)
        if data == b'P2P8\x01\x00\x00\x00\x14\x00\x00\x00\x03\xff\x01\x00\xe3\x07\x00\x00\x10\x00\x00\x00':
            server.sendto(b'P2P8\x02\x00\x00\x00\x14\x00\x00\x00\x03\x01\xb5\xbe\xe3\x07\x00\x00\x10\x00\x00\x00\x01', addr)
            server.sendto(b'\x02\x00\x00\x00\n\x00\x00\x00\x14\x00\x00\x00\xbe\xbe\xbd\xbe\xe3\x07\x00\x00', addr)
        if data == b'P2P8\x01\x00\x00\x00\x14\x00\x00\x00\x07\xff\x01\x00\xe3\x07\x00\x00\x10\x00\x00\x00':
            server.sendto(b'P2P8\x06\x00\x00\x00\x14\x00\x00\x00\r\xff\xbd\xbe\xe3\x07\x00\x00\x01\x00\x10\x00\x00\x00\x01\x01rJ\xc0\xa8W\xfe', addr)
        if data == b'P2P8/\x00\x00\x00\x00\x00\x00\x00\t\x01\x01\x00\x00\x00\x00\x00\x00':
            server.sendto(b'P2P8\x02\x00\x00\x00\x14\x00\x00\x00\x00\x01\xb5\xbe\xe3\x07\x00\x00\x10\x00\x00\x00\x01',addr)
        # if data == protocol.get('error'):
        #     print("Receive from [%s:%s] ERROR" % addr)
        #
        #     server.sendto(
        #         b'P2P8\x06\x00\x00\x00\x14\x00\x00\x00o\xff\xb9\xc3\xe3\x07\x00\x00\x02\x00\x10\x00\x00\x00\x01\x01\x01\xd4\xc0\xa8W\xfe\x02\x016C\xc0\xa8W\xfe',
        #         addr)
        #     server.sendto(b'\x02\x00\x00\x00\n\x00\x00\x00\x14\x00\x00\x00\xc0\xa8U\xfe\xe3\x07\x00\x00', addr)
        #     pass
        else:
            print("P2P8 [%s:%s] " % addr, end="")
            print(data)
    elif data.find(b'HMTP') == 0:
        # print("HMTP [%s:%s] " % addr, end="")
        # print(data)


        for ipaddr in online:
            server.sendto(data, ipaddr)
            # print("HMTP [%s:%s] " % ipaddr)

        if data.find(b'\xfdwyu4f') > 0:
            print("通过结束",online)
    else:
        print("Unknow [%s:%s] " % addr, end="")
        print(data)
        # server.sendto(b'P2P8\x02\x00\x00\x00\x14\x00\x00\x00\x00\x06\xb5\xc3\xe3\x07\x00\x00\x10\x00\x00\x00\x06', addr)
        # continue
    # message = data.decode()
    # print(message)

	# 	message.encode()
    # server.sendto(b"Hello %s!\n" % data, addr)